{"version":3,"sources":["modules/hooks/useLocalStorage.js","modules/hooks/useFetch.js","modules/components/tagList.js","modules/components/addToFavorites.js","modules/components/feed.js","modules/utils.js","modules/components/pagination.js","modules/components/popularTags.js","modules/contexts/currentUser.js","modules/components/feedToggler.js","modules/pages/globalFeed/index.js","modules/pages/article/index.js","modules/pages/tagFeed/index.js","modules/components/backendErrorMessages.js","modules/pages/settings/index.js","modules/pages/yourFeed/index.js","modules/components/articleForm.js","modules/pages/createArticle/index.js","modules/pages/editArticle/index.js","modules/pages/authentication/index.js","modules/pages/userProfile/components/userArticles.js","modules/pages/userProfile/index.js","modules/routes.js","modules/components/topBar.js","modules/components/currentUserChecker.js","App.js","index.js"],"names":["key","initialValue","useState","localStorage","getItem","value","setValue","useEffect","setItem","url","isLoading","setIsLoading","response","setResponse","error","setError","options","setOptions","useLocalStorage","token","console","log","doFetch","useCallback","requestOptions","headers","authorization","axios","then","res","data","catch","err","TagList","tags","className","map","tag","AddToFavorites","isFavorited","favoritesCount","articleSlug","useFetch","isFavoritedWithResponse","article","favorited","favoritesCountWithResponse","buttonClasses","classNames","btn","onClick","e","preventDefault","method","Feed","articles","index","to","author","username","src","image","alt","userName","createdAt","slug","title","description","tagList","getPaginator","search","parsedSearch","parse","currentPage","page","Number","offset","PaginationItem","liClasses","classnames","active","Pagination","start","end","total","limit","pagesCount","Math","ceil","pages","Array","keys","el","PopularTags","initialState","isLogged","currentUser","reducer","state","type","payload","CurrentUserContext","createContext","CurrentUserProvider","children","useReducer","Provider","FeedToggler","tagName","useContext","currentUserState","exact","GlobalFeed","location","match","stringifiedParams","stringify","apiUrl","articlesCount","Article","props","params","fetchArticleIsLoading","fetchArticleError","fetchArticleResponse","deleteArticleResponse","doDeleteArticle","isSuccessfulDelete","setIsSuccessfulDelete","body","TagFeed","BackendErrorMessages","backendErrors","errorMessages","Object","name","messages","join","errorMessage","Settings","dispatch","setToken","isSuccessfulLogout","setIsSuccessfulLogout","setImage","setUsername","bio","setBio","email","setEmail","password","setPassword","user","errors","onSubmit","placeholder","onChange","target","rows","YourFeed","ArticleForm","initialValues","setTitle","setBody","setDescription","setTagList","event","CreateArticle","isSuccessfulSubmit","setIsSuccessfulSubmit","EditArticle","doFetchArticle","updateArticleResponse","updateArticleError","doUpdateArticle","setInitialValues","Authentication","isLogin","path","pageTitle","descriptionLink","descriptionText","disabled","UserArticles","isFavorites","getApiUrl","UserProfile","pathname","includes","profile","component","TopBar","CurrentUserChecker","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.397428dd.chunk.js","sourcesContent":["import {useState, useEffect} from 'react'\r\n\r\nexport default (key, initialValue = '') =>{\r\n    const [value, setValue] = useState(()=>{\r\n        return localStorage.getItem(key) || initialValue\r\n    })\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(key, value)\r\n    }, [key, value])\r\n\r\n    return [value, setValue]\r\n}","import {useState, useEffect, useCallback} from 'react'\r\nimport axios from 'axios'\r\n\r\nimport useLocalStorage from './useLocalStorage'\r\n\r\nexport default url =>{\r\n\r\n    const baseUrl = 'https://conduit.productionready.io/api'\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [response, setResponse] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [options, setOptions] = useState({})\r\n    const [token] = useLocalStorage('token')\r\n    console.log('token', token)\r\n\r\n    const doFetch = useCallback((options={}) =>{\r\n        setOptions(options)\r\n        setIsLoading(true)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        const requestOptions = {\r\n            ...options, \r\n            ...{\r\n                headers:{\r\n                    authorization: token? `Token ${token}`: ''\r\n                }\r\n            }\r\n        }\r\n        if(!isLoading) return\r\n        console.log('effect was triggered')\r\n        axios(baseUrl + url, requestOptions)\r\n        .then(res=>{\r\n            console.log('success', res)\r\n            setIsLoading(false)\r\n            setResponse(res.data)\r\n        })\r\n        .catch(err=>{\r\n            console.log('error', err)\r\n            setIsLoading(false)\r\n            setError(err.response.data)\r\n        })\r\n    }, [isLoading, options, url, token])\r\n\r\n    return [{isLoading, response, error}, doFetch]\r\n\r\n}","import React from 'react'\r\n\r\nconst TagList = ({ tags }) => {\r\n    return (\r\n        <ul className='tag-list'>\r\n            {tags.map(tag => {\r\n                return (\r\n                    <li className='tag-default tag-pill tag-outline' key={tag}>\r\n                        {tag}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default TagList","import React from 'react'\r\nimport classNames from 'classnames'\r\n\r\nimport useFetch from '../hooks/useFetch'\r\n\r\nconst AddToFavorites = ({isFavorited, favoritesCount, articleSlug}) =>{\r\n    const [{response}, doFetch] = useFetch(`/articles/${articleSlug}/favorite`)\r\n    const handleLike =e=>{\r\n        e.preventDefault()\r\n        doFetch({\r\n            method: isFavoritedWithResponse? 'delete': 'post'\r\n        })\r\n    }\r\n    const isFavoritedWithResponse = response? response.article.favorited: isFavorited\r\n    const favoritesCountWithResponse = response? response.article.favoritesCount: favoritesCount\r\n    const buttonClasses =classNames({\r\n        btn: true,\r\n        'btn-sm': true,\r\n        'btn-primary': isFavoritedWithResponse,\r\n        'btn-outline-primary': !isFavoritedWithResponse\r\n    })\r\n\r\n    return (\r\n        <button \r\n            className={buttonClasses}\r\n            onClick={handleLike}\r\n        >\r\n            <i className='ion-heart'></i>\r\n            <span>&nbsp; {favoritesCountWithResponse}</span>\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default AddToFavorites","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nimport TagList from './tagList'\r\nimport AddToFavorites from './addToFavorites'\r\n\r\nconst Feed = ({articles}) =>{\r\n    return(\r\n        <div>\r\n            {articles.map((article, index)=>{\r\n                return(\r\n                    <div className='article-preview' key={index}>\r\n                        <div className='article-meta'>\r\n                            <Link to={`/profiles/${article.author.username}`}>\r\n                                <img src={article.author.image} alt=''/>\r\n                            </Link>\r\n                        </div>\r\n                        <div className='info'>\r\n                            <Link to={ `/profiles/${article.author.username}`}>\r\n                                {article.author.userName}\r\n                            </Link>\r\n                            <span className='date'>{article.createdAt}</span>\r\n                        </div>\r\n                        <div className='pull-xs-right'>\r\n                            <AddToFavorites\r\n                                isFavorited = {article.favorited}\r\n                                favoritesCount = {article.favoritesCount}\r\n                                articleSlug={article.slug}\r\n                            />\r\n                        </div>\r\n                        <Link to={`/article/${article.slug}`} className='preview-link'>\r\n                            <h1>{article.title}</h1>\r\n                            <p>{article.description}</p>\r\n                            <span>Read more...</span>\r\n                            <TagList tags={article.tagList}/>\r\n                        </Link>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feed\r\n","import {parse} from 'query-string'\r\n\r\nexport const range = (start, end)=>{\r\n    return [...Array(end).keys()].map(el=>el+start)\r\n}\r\n\r\nexport const limit = 10\r\n\r\nexport const getPaginator = search =>{\r\n    const parsedSearch = parse(search)\r\n    const currentPage = parsedSearch.page? Number(parsedSearch.page): 1\r\n    const offset = currentPage * 10 - limit\r\n    return {currentPage, offset}\r\n}","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport classnames from 'classnames'\r\n\r\nimport {range} from '../utils'\r\n\r\nconst PaginationItem = ({page, currentPage, url}) =>{\r\n    const liClasses = classnames({\r\n        'page-item': true,\r\n        active: currentPage === page\r\n    })\r\n    return(\r\n        <li className={liClasses}>\r\n            <Link to={`${url}?page=${page}`} className='page-link'>\r\n                {page}\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nconst Pagination = ({total, limit, url, currentPage}) =>{\r\n    const pagesCount = Math.ceil(total / limit)\r\n    const pages = range(1, pagesCount)\r\n    return(\r\n        <ul className='pagination'>\r\n            {\r\n                pages.map(page=>(\r\n                    <PaginationItem\r\n                        page={page}\r\n                        currentPage={currentPage}\r\n                        url={url}\r\n                        key={page}\r\n                    />\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport useFetch from '../hooks/useFetch'\r\n\r\nconst PopularTags = () =>{\r\n    const [{response, error, isLoading}, doFetch] = useFetch('/tags')\r\n    useEffect(()=>{\r\n        doFetch()\r\n    }, [doFetch])\r\n    return(\r\n        <div>\r\n            {error && <div>Error</div>}\r\n            {isLoading && <div>Loading...</div>}\r\n            {!isLoading && response && (\r\n                <div className='side-bar'>\r\n                    <p>Popular Tags</p>\r\n                    <div className='tag-list'>\r\n                        {response.tags.map(tag=>{\r\n                            return (\r\n                                <Link to={`/tags/${tag}`} className='tag-default tag-pill' key={tag}>\r\n                                    {tag}\r\n                                </Link>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PopularTags","import { createContext, useReducer } from 'react'\r\nimport React from 'react'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    isLogged: null,\r\n    currentUser: null\r\n}\r\n\r\nconst reducer = (state, { type, payload }) => {\r\n    switch (type) {\r\n        case 'LOADING':\r\n            return {\r\n                ...state, isLoading: true\r\n            }\r\n        case 'SET_AUTHORIZED':\r\n            return {\r\n                ...state,\r\n                isLogged: true,\r\n                isLoading: false,\r\n                currentUser: payload\r\n            }\r\n        case 'SET_UNAUTHORIZED':\r\n            return {\r\n                ...state,\r\n                isLogged: false\r\n            }\r\n        case 'LOGOUT':\r\n            return {\r\n                ...initialState,\r\n                isLogged: false\r\n            }\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const CurrentUserContext = createContext([{}, () => { }])\r\n\r\nexport const CurrentUserProvider = ({ children }) => {\r\n    // const [state, setState] = useState({\r\n    //     isLoading: false,\r\n    //     isLogged: null,\r\n    //     currentUser: null\r\n    // })\r\n    const value = useReducer(reducer, initialState)\r\n    return (\r\n        <CurrentUserContext.Provider value={value}>\r\n            {children}\r\n        </CurrentUserContext.Provider>\r\n    )\r\n\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport {CurrentUserContext} from '../contexts/currentUser'\r\n\r\nconst FeedToggler = ({tagName}) =>{\r\n    const [currentUserState] = useContext(CurrentUserContext)\r\n    console.log('currentUserState', currentUserState)\r\n    return(\r\n        <div className='feed-toggle'>\r\n            <ul className='nav nav-pills outline-active'>\r\n                {currentUserState.isLogged && (\r\n                    <li className='nav-item'>\r\n                        <NavLink to='/feed' className='nav-link'>\r\n                            Your feed\r\n                        </NavLink>\r\n                    </li>\r\n                )}\r\n                <li className='nav-item'>\r\n                    <NavLink to='/' className='nav-link' exact>\r\n                        Global feed\r\n                    </NavLink>\r\n                </li>\r\n                {tagName && (\r\n                    <li className='nav-item'>\r\n                        <NavLink to={`tags/${tagName}`} className='nav-link'>\r\n                            <i className='ion-pound'></i>\r\n                            {tagName}\r\n                        </NavLink>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FeedToggler","import React, { useEffect, Fragment } from 'react'\r\nimport {stringify} from 'query-string'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport Feed from '../../components/feed'\r\nimport Pagination from '../../components/pagination'\r\nimport PopularTags from '../../components/popularTags'\r\nimport FeedToggler from '../../components/feedToggler'\r\nimport {getPaginator, limit} from '../../utils'\r\n\r\nconst GlobalFeed = ({location, match}) => {\r\n    const {offset, currentPage} = getPaginator(location.search)\r\n    const stringifiedParams = stringify({\r\n        offset, limit\r\n    })\r\n    const apiUrl = `/articles?${stringifiedParams}`\r\n    const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl)\r\n    const url = match.url\r\n\r\n    useEffect(() => {\r\n        doFetch()\r\n    }, [doFetch, currentPage])\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='banner'>\r\n                <div className='container'>\r\n                    <h1>\r\n                        Medium Clone\r\n                    </h1>\r\n                    <p> A place to share knowledge</p>\r\n                </div>\r\n            </div>\r\n            <div className='container page'>\r\n                <div className='row'>\r\n                    <div className = 'col-md-9'>\r\n                        <FeedToggler/>\r\n                        {isLoading && <div>Loading...</div>}\r\n                        {error && <div>Some Error Happened</div>}\r\n                        {!isLoading && response && (\r\n                            <Fragment>\r\n                                <Feed articles={response.articles}/>\r\n                                <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />\r\n                            </Fragment>\r\n                        )}\r\n                    </div>\r\n                    <div className = 'col-md-3'>\r\n                        <PopularTags/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GlobalFeed","import React, { useEffect, useContext, useState } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport TagList from '../../components/tagList'\r\nimport {CurrentUserContext} from '../../contexts/currentUser'\r\n\r\n\r\nconst Article = props => {\r\n    const slug = props.match.params.slug\r\n    const apiUrl = `/articles/${slug}`\r\n    const [{ isLoading: fetchArticleIsLoading, error: fetchArticleError, response: fetchArticleResponse }, \r\n        doFetch] = useFetch(apiUrl)\r\n    const [{ response: deleteArticleResponse }, doDeleteArticle] = useFetch(apiUrl)\r\n    const [currentUserState] = useContext(CurrentUserContext)\r\n    const [isSuccessfulDelete, setIsSuccessfulDelete] = useState(false)\r\n\r\n    const isAuthor = () =>{\r\n        if(!fetchArticleResponse || !currentUserState.isLogged)\r\n            return false\r\n        return fetchArticleResponse.article.author.userName === currentUserState.currentUser.userName\r\n    }\r\n\r\n    const deleteArticle = () =>{\r\n        doDeleteArticle({method: 'delete'})\r\n    }\r\n\r\n    useEffect(() => {\r\n        doFetch()\r\n    }, [doFetch])\r\n    useEffect(()=>{\r\n        if(!deleteArticleResponse)\r\n            return\r\n        setIsSuccessfulDelete(true)\r\n    }, [deleteArticleResponse])\r\n\r\n    if(isSuccessfulDelete)\r\n        return <Redirect to='/'/>\r\n\r\n    return (\r\n        <div className='article-page'>\r\n            <div className='banner'>\r\n                {!fetchArticleIsLoading && fetchArticleResponse && (\r\n                    <div className='container'>\r\n                        <h1>{fetchArticleResponse.article.title}</h1>\r\n                        <div className='article-meta'>\r\n                            <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\r\n                                <img src={fetchArticleResponse.article.author.image} alt='' />\r\n                            </Link>\r\n                        </div>\r\n                        <div className='info'>\r\n                            <Link to={`/profiles/${fetchArticleResponse.article.author.username}`}>\r\n                                {fetchArticleResponse.article.author.username}\r\n                            </Link>\r\n                            <span className='date'>{fetchArticleResponse.article.createdAt}</span>\r\n                        </div>\r\n                        {isAuthor && (\r\n                            <span>\r\n                                <Link \r\n                                    to={`/article/${fetchArticleResponse.article.slug}/edit`} \r\n                                    className='btn btn-outline-secondary btn-sm'\r\n                                >\r\n                                    <i className='ion-edit'></i>\r\n                                    Edit Article\r\n                                </Link>\r\n                                <button \r\n                                    className='btn btn-outline-danger btn-sm'\r\n                                    onClick={deleteArticle}\r\n                                >\r\n                                    <i className='ion-trash-a'></i>\r\n                                    Delete Article\r\n                                </button>\r\n                            </span>\r\n                        )}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            <div className='container page'>\r\n                {fetchArticleIsLoading && <div>is Loading</div>}\r\n                {fetchArticleError && <div>Error!!!</div>}\r\n                {!fetchArticleIsLoading && fetchArticleResponse && (\r\n                    <div className='row article-content'>\r\n                        <div className='col-xs-12'>\r\n                            <div>\r\n                                <p>{fetchArticleResponse.article.body}</p>\r\n                            </div>\r\n                            <TagList tags={fetchArticleResponse.article.tagList} />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Article","import React, { useEffect, Fragment } from 'react'\r\nimport {stringify} from 'query-string'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport Feed from '../../components/feed'\r\nimport Pagination from '../../components/pagination'\r\nimport PopularTags from '../../components/popularTags'\r\nimport FeedToggler from '../../components/feedToggler'\r\nimport {getPaginator, limit} from '../../utils'\r\n\r\nconst TagFeed = ({location, match}) => {\r\n    const tagName = match.params.slug\r\n    const {offset, currentPage} = getPaginator(location.search)\r\n    const stringifiedParams = stringify({\r\n        offset, limit, tag: tagName\r\n    })\r\n    const apiUrl = `/articles?${stringifiedParams}`\r\n    const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl)\r\n    const url = match.url\r\n    console.log('response', response)\r\n\r\n    useEffect(() => {\r\n        doFetch()\r\n    }, [doFetch, currentPage, tagName])\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='banner'>\r\n                <div className='container'>\r\n                    <h1>\r\n                        Medium Clone\r\n                    </h1>\r\n                    <p> A place to share knowledge</p>\r\n                </div>\r\n            </div>\r\n            <div className='container page'>\r\n                <div className='row'>\r\n                    <div className = 'col-md-9'>\r\n                        <FeedToggler tagName={tagName}/>\r\n                        {isLoading && <div>Loading...</div>}\r\n                        {error && <div>Some Error Happened</div>}\r\n                        {!isLoading && response && (\r\n                            <Fragment>\r\n                                <Feed articles={response.articles}/>\r\n                                <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />\r\n                            </Fragment>\r\n                        )}\r\n                    </div>\r\n                    <div className = 'col-md-3'>\r\n                        <PopularTags/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TagFeed","import React from 'react'\r\n\r\nconst BackendErrorMessages = ({backendErrors}) =>{\r\n    const errorMessages = Object.keys(backendErrors).map(name=>{\r\n        const messages = backendErrors[name].join(' ')\r\n        return `${name} ${messages}`\r\n    })\r\n    return(\r\n        <ul className='error-messages'>\r\n            {errorMessages.map(errorMessage=>(\r\n                <li key={errorMessage}>\r\n                    {errorMessage}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default BackendErrorMessages","import React, { useContext, useState, useEffect } from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport { CurrentUserContext } from '../../contexts/currentUser'\r\nimport BackendErrorMessages from '../../components/backendErrorMessages'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport useLocalStorage from '../../hooks/useLocalStorage'\r\n\r\nconst Settings = () => {\r\n    const [currentUserState, dispatch] = useContext(CurrentUserContext)\r\n    const apiUrl = '/user'\r\n    const [{ response, error }, doFetch] = useFetch(apiUrl)\r\n    const [, setToken] = useLocalStorage('token')\r\n    const [isSuccessfulLogout, setIsSuccessfulLogout] = useState(false)\r\n    \r\n    const [image, setImage] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [bio, setBio] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        doFetch({\r\n            method: 'put',\r\n            data: {\r\n                user:{\r\n                    ...currentUserState.currentUser,\r\n                    image,\r\n                    username,\r\n                    bio,\r\n                    email,\r\n                    password\r\n                }\r\n            }\r\n        })\r\n    }\r\n    const logout = e => {\r\n        e.preventDefault()\r\n        setToken('')\r\n        dispatch({type: 'LOGOUT'})\r\n        setIsSuccessfulLogout(true)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!currentUserState.currentUser){\r\n            return\r\n        }\r\n        setImage(currentUserState.currentUser.image)\r\n        setUsername(currentUserState.currentUser.username)\r\n        setBio(currentUserState.currentUser.bio)\r\n        setEmail(currentUserState.currentUser.email)\r\n    }, [currentUserState.currentUser])\r\n\r\n    useEffect(()=>{\r\n        if(!response)\r\n            return\r\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\r\n    }, [response, dispatch])\r\n\r\n    if(isSuccessfulLogout)\r\n        return <Redirect to='/'/>\r\n\r\n    return (\r\n        <div className='settings-page'>\r\n            <div className='container page'>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-xs-12'>\r\n                        <h1 className='text-xs-center'>\r\n                            Your Settings\r\n                        </h1>\r\n                        {error && <BackendErrorMessages backendErrors={error.errors} />}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='URL of profile picture'\r\n                                        value={image}\r\n                                        onChange={e=>setImage(e.target.value)}\r\n                                    />\r\n                                </fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='Username'\r\n                                        value={username}\r\n                                        onChange={e=>setUsername(e.target.value)}\r\n                                    />\r\n                                </fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <textarea\r\n                                        className='form-control form-control-lg'\r\n                                        rows='8'\r\n                                        placeholder='Short bio'\r\n                                        value={bio}\r\n                                        onChange={e=>setBio(e.target.value)}\r\n                                    >\r\n                                    </textarea>\r\n                                </fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='text'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='Email'\r\n                                        value={email}\r\n                                        onChange={e=>setEmail(e.target.value)}\r\n                                    />\r\n                                </fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='password'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='Password'\r\n                                        value={password}\r\n                                        onChange={e=>setPassword(e.target.value)}\r\n                                    />\r\n                                </fieldset>\r\n                                <button\r\n                                    type='submit'\r\n                                    className='btn btn-lg btn-primary pull-xs-right'\r\n                                >\r\n                                    Update Settings\r\n                                </button>\r\n                            </fieldset>\r\n                        </form>\r\n                        <hr />\r\n                        <button\r\n                            type='submit'\r\n                            className='btn btn-outline-danger'\r\n                            onClick={logout}\r\n                        >\r\n                            Or click here to logout\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings","import React, { useEffect, Fragment } from 'react'\r\nimport {stringify} from 'query-string'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport Feed from '../../components/feed'\r\nimport Pagination from '../../components/pagination'\r\nimport PopularTags from '../../components/popularTags'\r\nimport FeedToggler from '../../components/feedToggler'\r\nimport {getPaginator, limit} from '../../utils'\r\n\r\nconst YourFeed = ({location, match}) => {\r\n    const {offset, currentPage} = getPaginator(location.search)\r\n    const stringifiedParams = stringify({\r\n        offset, limit\r\n    })\r\n    const apiUrl = `/articles/feed?${stringifiedParams}`\r\n    const [{ response, isLoading, error }, doFetch] = useFetch(apiUrl)\r\n    const url = match.url\r\n\r\n    useEffect(() => {\r\n        doFetch()\r\n    }, [doFetch, currentPage])\r\n\r\n    return (\r\n        <div className='home-page'>\r\n            <div className='banner'>\r\n                <div className='container'>\r\n                    <h1>\r\n                        Medium Clone\r\n                    </h1>\r\n                    <p> A place to share knowledge</p>\r\n                </div>\r\n            </div>\r\n            <div className='container page'>\r\n                <div className='row'>\r\n                    <div className = 'col-md-9'>\r\n                        <FeedToggler/>\r\n                        {isLoading && <div>Loading...</div>}\r\n                        {error && <div>Some Error Happened</div>}\r\n                        {!isLoading && response && (\r\n                            <Fragment>\r\n                                <Feed articles={response.articles}/>\r\n                                <Pagination total={response.articlesCount} limit={limit} url={url} currentPage={currentPage} />\r\n                            </Fragment>\r\n                        )}\r\n                    </div>\r\n                    <div className = 'col-md-3'>\r\n                        <PopularTags/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YourFeed","import React, { useState, useEffect } from 'react'\r\n\r\nimport BackendErrorMessages from './backendErrorMessages'\r\n\r\nconst ArticleForm = ({ onSubmit, errors, initialValues }) => {\r\n    console.log('errors', errors)\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const [description, setDescription] = useState('')\r\n    const [tagList, setTagList] = useState('')\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault()\r\n        const article = {\r\n            title, body, description, tagList\r\n        }\r\n        onSubmit(article)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        if(!initialValues)\r\n            return\r\n        setTitle(initialValues.title)\r\n        setBody(initialValues.body)\r\n        setDescription(initialValues.description)\r\n        setTagList(initialValues.tagList.join(' '))\r\n    }, [initialValues])\r\n    return (\r\n        <div className='editor-page'>\r\n            <div className='container page'>\r\n                <div className='col-md-10 offset-md-1 col-xs-12'>\r\n                    {errors && <BackendErrorMessages backendErrors={errors}/>}\r\n                    <form onSubmit={handleSubmit}>\r\n                        <fieldset>\r\n                            <fieldset className='form-group'>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control form-control-lg'\r\n                                    placeholder='Article title'\r\n                                    value={title}\r\n                                    onChange={e=>setTitle(e.target.value)}\r\n                                />\r\n                            </fieldset>\r\n                            <fieldset className='form-group'>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control form-control-lg'\r\n                                    placeholder='What is this article about?'\r\n                                    value={description}\r\n                                    onChange={e=>setDescription(e.target.value)}\r\n                                />\r\n                            </fieldset>\r\n                            <fieldset className='form-group'>\r\n                                <textarea\r\n                                    className='form-control'\r\n                                    rows='8'\r\n                                    placeholder='Write your article'\r\n                                    value={body}\r\n                                    onChange={e=>setBody(e.target.value)}\r\n                                >\r\n                                </textarea>\r\n                            </fieldset>\r\n                            <fieldset className='form-group'>\r\n                                <input\r\n                                    type='text'\r\n                                    className='form-control form-control-lg'\r\n                                    placeholder='Enter tags'\r\n                                    value={tagList}\r\n                                    onChange={e=>setTagList(e.target.value)}\r\n                                />\r\n                            </fieldset>\r\n                            <fieldset className='form-group'>\r\n                                <button\r\n                                    type='submit'\r\n                                    className='btn btn-lg pull-xs-right btn-primary'\r\n                                    placeholder='article title'\r\n                                >\r\n                                    Publish Article\r\n                                </button>\r\n                            </fieldset>\r\n                        </fieldset>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ArticleForm","import React, {useState, useEffect, useContext} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport ArticleForm from '../../components/articleForm'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport {CurrentUserContext} from '../../contexts/currentUser'\r\n\r\nconst CreateArticle = () =>{\r\n    const apiUrl = '/articles'\r\n    const [{error, response}, doFetch] = useFetch(apiUrl)\r\n    const [currentUserState] = useContext(CurrentUserContext)\r\n    const initialValues = {\r\n        title: '',\r\n        description: '',\r\n        body: '',\r\n        tagList : []\r\n    }\r\n    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)\r\n    const handleSubmit = article =>{\r\n        doFetch({\r\n            method: 'post',\r\n            data: {\r\n                article\r\n            }\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        if(!response)\r\n            return\r\n        setIsSuccessfulSubmit(true)\r\n    }, [response])\r\n    if(currentUserState.isLogged===false)\r\n        return (<Redirect to='/'/>)\r\n    if(isSuccessfulSubmit)\r\n        return (<Redirect to={`/article/${response.article.slug}`}/>)\r\n    return(\r\n        <div>\r\n            <ArticleForm \r\n                errors={(error && error.errors) || {}} \r\n                initialValues={initialValues} \r\n                onSubmit={handleSubmit}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateArticle","import React, {useState, useEffect, useContext} from 'react'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport ArticleForm from '../../components/articleForm'\r\nimport useFetch from '../../hooks/useFetch'\r\nimport {CurrentUserContext} from '../../contexts/currentUser'\r\n\r\nconst EditArticle = ({match})=>{\r\n    const [currentUserState] = useContext(CurrentUserContext)\r\n    \r\n    const slug = match.params.slug\r\n    const apiUrl = `/articles/${slug}`\r\n    const [{response: fetchArticleResponse}, doFetchArticle] = useFetch(apiUrl)\r\n    const [{response: updateArticleResponse, error: updateArticleError}, doUpdateArticle] = useFetch(apiUrl)\r\n    const [initialValues, setInitialValues] = useState(null)\r\n    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)\r\n\r\n    const handleSubmit = article =>{\r\n        doUpdateArticle({\r\n            method: 'put',\r\n            data: {article}\r\n        })\r\n    }\r\n    useEffect(()=>{\r\n        doFetchArticle()\r\n    }, [doFetchArticle])\r\n    useEffect(()=>{\r\n        if(!fetchArticleResponse)\r\n            return\r\n        const {\r\n            title, body, description, tagList\r\n        } = fetchArticleResponse.article\r\n        setInitialValues({title, body, description, tagList})\r\n    }, [fetchArticleResponse])\r\n    useEffect(()=>{\r\n        if(!updateArticleResponse)\r\n            return\r\n        setIsSuccessfulSubmit(true)\r\n    }, [updateArticleResponse])\r\n\r\n    if(isSuccessfulSubmit)\r\n        return(\r\n            <Redirect to={`/article/${slug}`}/>\r\n        )\r\n    if(currentUserState.isLogged===false)\r\n        return(\r\n            <Redirect to='/'/>\r\n        )\r\n    return(\r\n        <ArticleForm \r\n            onSubmit={handleSubmit}\r\n            errors={(updateArticleError && updateArticleError.errors) || {}}\r\n            initialValues={initialValues}\r\n        />\r\n    )\r\n}\r\n\r\nexport default EditArticle","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport useLocalStorage from '../../hooks/useLocalStorage'\r\nimport {CurrentUserContext} from '../../contexts/currentUser'\r\nimport BackendErrorMessages from '../../components/backendErrorMessages'\r\n\r\nconst Authentication = props => {\r\n    const isLogin = props.match.path === '/login'\r\n    const pageTitle = isLogin ? 'Sign in' : 'Sign up'\r\n    const descriptionLink = isLogin ? '/register' : '/login'\r\n    const descriptionText = isLogin ? 'Need an acount?' : 'Have an acount?'\r\n    const apiUrl = isLogin ? '/users/login' : '/users'\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [username, setUsername] = useState('')\r\n    const [isSuccessfulSubmit, setIsSuccessfulSubmit] = useState(false)\r\n    const [{isLoading, response, error }, doFetch] = useFetch(apiUrl)\r\n    const [, setToken] = useLocalStorage('token')\r\n    const [currentUserState, dispatch] = useContext(CurrentUserContext)\r\n\r\n    console.log('currentUserState', currentUserState)\r\n\r\n    useEffect(()=>{\r\n        if(!response)\r\n            return\r\n        setToken(response.user.token)\r\n        setIsSuccessfulSubmit(true)\r\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\r\n    }, [response, setToken, dispatch])\r\n\r\n\r\n    if(isSuccessfulSubmit)\r\n        return <Redirect to='/'/>\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        const user = isLogin? {email, password}: {email, password, username}\r\n        e.preventDefault()\r\n        console.log(email, password)\r\n        doFetch({\r\n            method: 'post',\r\n            data: {user}\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='auth-page'>\r\n            <div className='container page'>\r\n                <div className='row'>\r\n                    <div className='col-md-6 offset-md-3 col-xs-12'>\r\n                        <h1 className='text-xs-center'>\r\n                            {pageTitle}\r\n                        </h1>\r\n                        <p className='text-xs-center'>\r\n                            <Link to={descriptionLink}>{descriptionText}</Link>\r\n                        </p>\r\n                        <form onSubmit={handleSubmit}>\r\n                            {error && <BackendErrorMessages backendErrors={error.errors}/>}\r\n                            <fieldset>\r\n                                {!isLogin &&\r\n                                    (<fieldset className='form-group'>\r\n                                        <input\r\n                                            type='text'\r\n                                            className='form-control form-control-lg'\r\n                                            placeholder='Username'\r\n                                            value={username}\r\n                                            onChange={e => setUsername(e.target.value)}\r\n                                        />\r\n                                    </fieldset>)\r\n                                }\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='email'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='Email'\r\n                                        value={email}\r\n                                        onChange={e => setEmail(e.target.value)}\r\n                                    //ref={emailRef}\r\n                                    />\r\n                                </fieldset>\r\n                                <fieldset className='form-group'>\r\n                                    <input\r\n                                        type='password'\r\n                                        className='form-control form-control-lg'\r\n                                        placeholder='Password'\r\n                                        value={password}\r\n                                        onChange={e => setPassword(e.target.value)}\r\n                                    />\r\n                                </fieldset>\r\n                                <button\r\n                                    className='btn btn-lg btn-primary pull-xs-right'\r\n                                    type='submit'\r\n                                    disabled={isLoading}\r\n                                >\r\n                                    {pageTitle}\r\n                                </button>\r\n                            </fieldset>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Authentication","import React, {useEffect, Fragment} from 'react'\r\nimport {stringify} from 'query-string'\r\n\r\nimport {getPaginator, limit} from '../../../utils'\r\nimport useFetch from '../../../hooks/useFetch'\r\nimport Feed from '../../../components/feed'\r\nimport Pagination from '../../../components/pagination'\r\n\r\nconst getApiUrl = ({username, offset, isFavorites}) =>{\r\n    const params = isFavorites\r\n        ? {limit, offset, favorited: username}\r\n        : {limit, offset, author: username}\r\n    return `/articles?${stringify(params)}`\r\n}\r\n\r\nconst UserArticles = ({username, location, isFavorites, url}) =>{\r\n    console.log('username', username, 'url ', url)\r\n    const {offset, currentPage} = getPaginator(location.search)\r\n    const apiUrl = getApiUrl({username, offset, isFavorites})\r\n    const [{response, isLoading, error}, doFetch] = useFetch(apiUrl)\r\n    useEffect(()=>{\r\n        doFetch()\r\n    }, [doFetch, isFavorites, username])\r\n    return(\r\n        <div>\r\n            {isLoading && <div>is Loading...</div>}\r\n            {error && <div>Error!!!</div>}\r\n            {!isLoading && response && (\r\n                <Fragment>\r\n                    <Feed articles={response.articles}/>\r\n                    <Pagination \r\n                        total={response.articlesCount} \r\n                        limit={limit} \r\n                        currentPage={currentPage}\r\n                        url={url}\r\n                    />\r\n                </Fragment>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserArticles","import React, { useEffect } from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nimport useFetch from '../../hooks/useFetch'\r\nimport UserArticles from './components/userArticles'\r\n\r\nconst UserProfile = ({ location, match }) => {\r\n    const slug = match.params.slug\r\n    console.log('slug', slug)\r\n    const isFavorites = location.pathname.includes('favorites')\r\n    const apiUrl = `/profiles/${slug}`\r\n    const [{ response }, doFetch] = useFetch(apiUrl)\r\n\r\n    useEffect(() => {\r\n        doFetch()\r\n    }, [doFetch, slug])\r\n    if (!response)\r\n        return null\r\n    console.log('response', response)\r\n    return (\r\n        <div className='profile-page'>\r\n            <div className='user-info'>\r\n                <div className='container'>\r\n                    <div className='row'>\r\n                        <div className='col-xs-12 col-md-10 offset-md-1'>\r\n                            <img className='user-img' alt='' src={response.profile.image} />\r\n                            <h4>{response.profile.username}</h4>\r\n                            <p>{response.profile.bio}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <div className='col-xs-12 col-md-10 offset-md-1'>\r\n                        <div className='article-toggle'>\r\n                            <ul className='nav nav-pills outline-active'>\r\n                                <li className='nav-item'>\r\n                                    <NavLink to={`/profiles/${response.profile.username}`}\r\n                                        className='nav-link'\r\n                                        exact\r\n                                    >\r\n                                        My Posts\r\n                                    </NavLink>\r\n                                </li>\r\n                                <li className='nav-item'>\r\n                                    <NavLink to={`/profiles/${response.profile.username}/favorites`}\r\n                                        className='nav-link'\r\n                                    >\r\n                                        Favorite Posts\r\n                                    </NavLink>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <UserArticles\r\n                            username={response.profile.username}\r\n                            location={location}\r\n                            isFavorites={isFavorites}\r\n                            url={location.pathname}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UserProfile","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport GlobalFeed from './pages/globalFeed'\r\nimport Article from './pages/article'\r\nimport TagFeed from './pages/tagFeed'\r\nimport Settings from './pages/settings'\r\nimport YourFeed from './pages/yourFeed'\r\nimport CreateArticle from './pages/createArticle'\r\nimport EditArticle from './pages/editArticle'\r\nimport Authentication from './pages/authentication'\r\nimport UserProfile from './pages/userProfile'\r\n\r\nexport default () => {\r\n    return (\r\n        <Switch>\r\n            <Route path='/profiles/:slug' component={UserProfile} />\r\n            <Route path='/profiles/:slug/favorites' component={UserProfile} />\r\n            <Route path='/tags/:slug' component={TagFeed} />\r\n            <Route path='/feed' component={YourFeed} />\r\n            <Route path='/settings' component={Settings} />\r\n            <Route path='/' component={GlobalFeed} exact/>\r\n            <Route path='/login' component={Authentication} />\r\n            <Route path='/register' component={Authentication} />\r\n            <Route path='/article/new' component={CreateArticle} />\r\n            <Route path='/article/:slug/edit' component={EditArticle} />\r\n            <Route path='/article/:slug' component={Article} />\r\n        </Switch>\r\n    )\r\n}","import React, { useContext, Fragment } from 'react'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nimport { CurrentUserContext } from '../contexts/currentUser'\r\n\r\nconst TopBar = () => {\r\n    const [currentUserState] = useContext(CurrentUserContext)\r\n    return (\r\n        <nav className='navbar navbar-light'>\r\n            <div className='container'>\r\n                <Link to='/' className='navbar-brand'>\r\n                    Medium\r\n                </Link>\r\n                <ul className='nav navbar-nav pull-xs-right'>\r\n                    <li className='nav-item'>\r\n                        <NavLink to='/' className='nav-link' exact>\r\n                            Home\r\n                        </NavLink>\r\n                    </li>\r\n                    {currentUserState.isLogged === false && (\r\n                        <Fragment>\r\n                            <li className='nav-item'>\r\n                                <NavLink to='/login' className='nav-link'>\r\n                                    Sign in\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <NavLink to='/register' className='nav-link'>\r\n                                    Sign up\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                    {currentUserState.isLogged && (\r\n                        <Fragment>\r\n                            <li className='nav-item'>\r\n                                <NavLink to='/article/new' className='nav-link'>\r\n                                    <i className='ion-compose'></i>\r\n                                    &nbsp; New Post\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <NavLink to='/settings' className='nav-link'>\r\n                                    <i className='ion-gear-a'></i>\r\n                                    &nbsp; Settings\r\n                                </NavLink>\r\n                            </li>\r\n                            <li className='nav-item'>\r\n                                <NavLink \r\n                                    to={`/profiles/${currentUserState.currentUser.username}`} \r\n                                    className='nav-link'\r\n                                >\r\n                                    <img className='user-pic' src={currentUserState.currentUser.image} alt=''/>\r\n                                    &nbsp; {currentUserState.currentUser.username}\r\n                                </NavLink>\r\n                            </li>\r\n                        </Fragment>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default TopBar","import {useEffect, useContext} from 'react'\r\n\r\nimport useFetch from '../hooks/useFetch'\r\nimport {CurrentUserContext} from '../contexts/currentUser'\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\n\r\nconst CurrentUserChecker = ({children}) =>{\r\n    const [{response}, doFetch] = useFetch('/user')\r\n    const [, dispatch] = useContext(CurrentUserContext)\r\n    const [token] = useLocalStorage('token')\r\n    useEffect(()=>{\r\n        console.log('init')\r\n        if(!token){\r\n            dispatch({type: 'SET_UNAUTHORIZED'})\r\n            return\r\n        }\r\n        doFetch()\r\n        dispatch({type: 'LOADING'})\r\n    }, [dispatch, token, doFetch])\r\n    useEffect(()=>{\r\n        if(!response)\r\n            return\r\n        dispatch({type: 'SET_AUTHORIZED', payload: response.user})\r\n    }, [response, dispatch])\r\n    return(\r\n        children\r\n    )\r\n}\r\n\r\nexport default CurrentUserChecker","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport Routes from './modules/routes'\nimport TopBar from './modules/components/topBar'\nimport { CurrentUserProvider } from './modules/contexts/currentUser'\nimport CurrentUserChecker from './modules/components/currentUserChecker'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <CurrentUserProvider>\n        <CurrentUserChecker>\n          <Router>\n            <TopBar />\n            <Routes />\n          </Router>\n        </CurrentUserChecker>\n      </CurrentUserProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}